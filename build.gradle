plugins {
  id 'java'
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation(platform('org.junit:junit-bom:5.13.4'))
  testImplementation('org.junit.jupiter:junit-jupiter:5.13.4')
  testRuntimeOnly("org.junit.platform:junit-platform-launcher")

  testImplementation('org.assertj:assertj-core:3.27.3')
  testImplementation('io.leangen.geantyref:geantyref:2.0.1')
  testImplementation('org.springframework:spring-core:6.2.9')

  // To avoid compiler warnings about @API annotations in JUnit code
  testCompileOnly('org.apiguardian:apiguardian-api:1.1.2')
}

base {
  archivesName = 'annogami'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(23)
  }
  // These are redundant when toolchain is set, but fine to keep explicit:
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).configureEach {
  options.release = 21
  // Gradle will automatically put module builds on the module path when it
  // sees module-info.java; no extra flags required.
}

test {
  useJUnitPlatform()
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
}

jar {
  version = '0.1-SNAPSHOT'
  // No need for Automatic-Module-Name when you ship a real module-info.class
}
